{"version":3,"sources":["Node.js"],"names":["define","$","treetable","Node","row","tree","settings","parentId","this","id","data","nodeIdAttr","parentIdAttr","treeCell","children","columnElType","column","expander","expanderTemplate","indenter","indenterTemplate","initialized","prepend","prototype","addChild","child","push","ancestors","node","parentNode","collapse","collapsed","removeClass","addClass","_hideChildren","attr","stringExpand","onNodeCollapse","apply","hasClass","expand","expanded","onNodeExpand","is","_showChildren","stringCollapse","hide","isBranchNode","length","branchAttr","updateBranchLeafClass","level","removeChild","i","inArray","splice","render","handler","target","expandable","e","parents","toggle","preventDefault","html","clickableNodeNames","off","on","keyCode","style","paddingLeft","indent","reveal","setParent","show","_initialize","_i","_len","_ref","_results","initialState","onNodeInitialized"],"mappings":"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","file":"../Node.js","sourcesContent":["define([\r\n\t\"skylark-jquery\",\r\n\t\"./treetable\"\r\n],function($,treetable){\r\n    function Node(row, tree, settings) {\r\n      var parentId;\r\n\r\n      this.row = row;\r\n      this.tree = tree;\r\n      this.settings = settings;\r\n\r\n      // TODO Ensure id/parentId is always a string (not int)\r\n      this.id = this.row.data(this.settings.nodeIdAttr);\r\n\r\n      // TODO Move this to a setParentId function?\r\n      parentId = this.row.data(this.settings.parentIdAttr);\r\n      if (parentId != null && parentId !== \"\") {\r\n        this.parentId = parentId;\r\n      }\r\n\r\n      this.treeCell = $(this.row.children(this.settings.columnElType)[this.settings.column]);\r\n      this.expander = $(this.settings.expanderTemplate);\r\n      this.indenter = $(this.settings.indenterTemplate);\r\n      this.children = [];\r\n      this.initialized = false;\r\n      this.treeCell.prepend(this.indenter);\r\n    }\r\n\r\n    Node.prototype.addChild = function(child) {\r\n      return this.children.push(child);\r\n    };\r\n\r\n    Node.prototype.ancestors = function() {\r\n      var ancestors, node;\r\n      node = this;\r\n      ancestors = [];\r\n      while (node = node.parentNode()) {\r\n        ancestors.push(node);\r\n      }\r\n      return ancestors;\r\n    };\r\n\r\n    Node.prototype.collapse = function() {\r\n      if (this.collapsed()) {\r\n        return this;\r\n      }\r\n\r\n      this.row.removeClass(\"expanded\").addClass(\"collapsed\");\r\n\r\n      this._hideChildren();\r\n      this.expander.attr(\"title\", this.settings.stringExpand);\r\n\r\n      if (this.initialized && this.settings.onNodeCollapse != null) {\r\n        this.settings.onNodeCollapse.apply(this);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Node.prototype.collapsed = function() {\r\n      return this.row.hasClass(\"collapsed\");\r\n    };\r\n\r\n    // TODO destroy: remove event handlers, expander, indenter, etc.\r\n\r\n    Node.prototype.expand = function() {\r\n      if (this.expanded()) {\r\n        return this;\r\n      }\r\n\r\n      this.row.removeClass(\"collapsed\").addClass(\"expanded\");\r\n\r\n      if (this.initialized && this.settings.onNodeExpand != null) {\r\n        this.settings.onNodeExpand.apply(this);\r\n      }\r\n\r\n      if ($(this.row).is(\":visible\")) {\r\n        this._showChildren();\r\n      }\r\n\r\n      this.expander.attr(\"title\", this.settings.stringCollapse);\r\n\r\n      return this;\r\n    };\r\n\r\n    Node.prototype.expanded = function() {\r\n      return this.row.hasClass(\"expanded\");\r\n    };\r\n\r\n    Node.prototype.hide = function() {\r\n      this._hideChildren();\r\n      this.row.hide();\r\n      return this;\r\n    };\r\n\r\n    Node.prototype.isBranchNode = function() {\r\n      if(this.children.length > 0 || this.row.data(this.settings.branchAttr) === true) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    Node.prototype.updateBranchLeafClass = function(){\r\n      this.row.removeClass('branch');\r\n      this.row.removeClass('leaf');\r\n      this.row.addClass(this.isBranchNode() ? 'branch' : 'leaf');\r\n    };\r\n\r\n    Node.prototype.level = function() {\r\n      return this.ancestors().length;\r\n    };\r\n\r\n    Node.prototype.parentNode = function() {\r\n      if (this.parentId != null) {\r\n        return this.tree[this.parentId];\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    Node.prototype.removeChild = function(child) {\r\n      var i = $.inArray(child, this.children);\r\n      return this.children.splice(i, 1)\r\n    };\r\n\r\n    Node.prototype.render = function() {\r\n      var handler,\r\n          settings = this.settings,\r\n          target;\r\n\r\n      if (settings.expandable === true && this.isBranchNode()) {\r\n        handler = function(e) {\r\n          $(this).parents(\"table\").treetable(\"node\", $(this).parents(\"tr\").data(settings.nodeIdAttr)).toggle();\r\n          return e.preventDefault();\r\n        };\r\n\r\n        this.indenter.html(this.expander);\r\n        target = settings.clickableNodeNames === true ? this.treeCell : this.expander;\r\n\r\n        target.off(\"click.treetable\").on(\"click.treetable\", handler);\r\n        target.off(\"keydown.treetable\").on(\"keydown.treetable\", function(e) {\r\n          if (e.keyCode == 13) {\r\n            handler.apply(this, [e]);\r\n          }\r\n        });\r\n      }\r\n\r\n      this.indenter[0].style.paddingLeft = \"\" + (this.level() * settings.indent) + \"px\";\r\n\r\n      return this;\r\n    };\r\n\r\n    Node.prototype.reveal = function() {\r\n      if (this.parentId != null) {\r\n        this.parentNode().reveal();\r\n      }\r\n      return this.expand();\r\n    };\r\n\r\n    Node.prototype.setParent = function(node) {\r\n      if (this.parentId != null) {\r\n        this.tree[this.parentId].removeChild(this);\r\n      }\r\n      this.parentId = node.id;\r\n      this.row.data(this.settings.parentIdAttr, node.id);\r\n      return node.addChild(this);\r\n    };\r\n\r\n    Node.prototype.show = function() {\r\n      if (!this.initialized) {\r\n        this._initialize();\r\n      }\r\n      this.row.show();\r\n      if (this.expanded()) {\r\n        this._showChildren();\r\n      }\r\n      return this;\r\n    };\r\n\r\n    Node.prototype.toggle = function() {\r\n      if (this.expanded()) {\r\n        this.collapse();\r\n      } else {\r\n        this.expand();\r\n      }\r\n      return this;\r\n    };\r\n\r\n    Node.prototype._hideChildren = function() {\r\n      var child, _i, _len, _ref, _results;\r\n      _ref = this.children;\r\n      _results = [];\r\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n        child = _ref[_i];\r\n        _results.push(child.hide());\r\n      }\r\n      return _results;\r\n    };\r\n\r\n    Node.prototype._initialize = function() {\r\n      var settings = this.settings;\r\n\r\n      this.render();\r\n\r\n      if (settings.expandable === true && settings.initialState === \"collapsed\") {\r\n        this.collapse();\r\n      } else {\r\n        this.expand();\r\n      }\r\n\r\n      if (settings.onNodeInitialized != null) {\r\n        settings.onNodeInitialized.apply(this);\r\n      }\r\n\r\n      return this.initialized = true;\r\n    };\r\n\r\n    Node.prototype._showChildren = function() {\r\n      var child, _i, _len, _ref, _results;\r\n      _ref = this.children;\r\n      _results = [];\r\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n        child = _ref[_i];\r\n        _results.push(child.show());\r\n      }\r\n      return _results;\r\n    };\r\n\r\n    return treetable.Node = Node;\r\n\r\n});"]}